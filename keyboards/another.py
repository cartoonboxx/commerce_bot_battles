import types
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database import db

def cabinet_back():
    kb = ReplyKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥')
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def statics_back():
    kb = ReplyKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥')
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def question():
    kb = ReplyKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥')
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def create_battle():
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –°–æ–∑–¥–∞—Ç—å –±–∞—Ç–ª', callback_data="create_battle")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def back_main_menu_channels(channels):
    kb = InlineKeyboardBuilder()
    for chan in channels:
        name = chan[3]
        id = chan[0]
        kb.button(text=name, callback_data=f'optionchannel;{id}')
    else:
        kb.button(text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data='addchannel')
        kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='backmainmenu')
    kb.adjust(1)
    return kb.as_markup()

def back_from_addchannel():
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='back_from_addchannel')
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

async def create_good(channel_id):
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–æ–≤–µ—Ä–∏–ª(–∞)', callback_data=f'channelsetting;choise_type;{channel_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'backtosettings;{channel_id}')
    kb.adjust(1)
    return kb.as_markup()

async def back_main_menu_add_channel_opt(channel_id):
    channel_info = await db.check_channel_info_by_id(channel_id)
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ç–æ-–±–∞—Ç–ª', callback_data=f'channelsetting;choise_type;{channel_id}')
    if channel_info[4] == 0 and channel_info[8] == '-':
        kb.button(text='–ù–µ –≤—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤', callback_data=f'change_method_send;{channel_id}')
        # kb.button(text='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–¥–º–∏–Ω-—á–∞—Ç –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ñ–æ—Ç–æ', callback_data=f'channelsetting;adminchat;{channel_id}')
    else:
        kb.button(text='–í—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤', callback_data=f'choice_method_send_photos;{channel_id}')
        # kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω-—á–∞—Ç', callback_data=f'channelsetting;correct_chat;{channel_id}')
    kb.button(text='–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data=f'channelsetting;delete;{channel_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='backtochannels')
    kb.adjust(1)
    return kb.as_markup()

async def back_main_menu_add_channel(channel_id):
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'backtosettings;{channel_id}')
    return kb.as_markup()

async def back_main_menu_create_battle(battle_id):
    kb = InlineKeyboardBuilder()
    battle_info = await db.check_battle_info(battle_id)
    if battle_info[23] == 2:
        kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'backtocreate;{battle_id}')
    else:
        kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'one_battle_message;{battle_id}')
    return kb.as_markup()

async def create_battle_kb(battle_id, channel_id):
    battle_info = await db.check_battle_info(battle_id)
    kb = InlineKeyboardBuilder()
    if battle_info[3] == "-":
        kb.button(text='‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'battlesettings;name;{battle_id}')
    else:
        kb.button(text='‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'battlesettings;name;{battle_id}')
    if battle_info[11] == 0:
        kb.button(text='‚ùå –ú–∏–Ω. –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã', callback_data=f'firstround;min_votes_win;{battle_id}')
    else:
        kb.button(text='‚úÖ –ú–∏–Ω. –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã', callback_data=f'firstround;min_votes_win;{battle_id}')
    if battle_info[6] == "-":
        kb.button(text='‚ùå –¢–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞', callback_data=f'battlesettings;prize;{battle_id}')
    else:
        kb.button(text='‚úÖ –¢–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞', callback_data=f'battlesettings;prize;{battle_id}')
    if battle_info[17] == 0:
        kb.button(text='‚ùå –ü–æ—Å—Ç –æ –±–∞—Ç–ª–µ', callback_data=f'battlesettings;battlepost;{battle_id}')
    else:
        kb.button(text='‚úÖ –ü–æ—Å—Ç –æ –±–∞—Ç–ª–µ', callback_data=f'battlesettings;battlepost;{battle_id}')
    if battle_info[13] == 0:
        kb.button(text='‚ùå –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ø–æ—Å—Ç–µ', callback_data=f'firstround;users_in_post;{battle_id}')
    else:
        kb.button(text='‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ø–æ—Å—Ç–µ', callback_data=f'firstround;users_in_post;{battle_id}')

    kb.button(text='‚úÖ –°–æ–∑–¥–∞—Ç—å –±–∞—Ç–ª', callback_data=f'firstround;iagree;{battle_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'channelsetting;choise_type;{channel_id}')
    kb.adjust(1)
    return kb.as_markup()